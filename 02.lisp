; Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

; Returns a + b if b is even, a otherwise
(def! add-if-even
  (fn* 
    (a b)
    (if (= 0 (% b 2)) (+ a b) a)
  )
)

; Given the first two terms in the fibonacci sequence, will return the total of all even fibonacci numbers up to the limit
(def! even-fib
  (fn*
    (first-term second-term limit total)
    (let* (current (+ first-term second-term))
      (if (> current limit)
        total
        (even-fib second-term current limit (add-if-even total current))
      )
    )
  )
)

(prn (even-fib 0 1 4000000 0))